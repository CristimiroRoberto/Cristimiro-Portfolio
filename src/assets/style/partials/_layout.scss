/* -------------- Layout ----------------*/

// Containers
$container-xl: 1440px;
$container-l: 1216px;
$container-m: 884px;
$container-s: 620px;
$container-xs: 540px;
$gutter: 32px;

// Mixin for media query's
@mixin responsive($device) {
  // Defines rules for devices with resolutions greater than 1440px
  @if $device == xl {
    @media screen and (min-width: $container-xl) {
      @content; // Includes the mixin content within this media query
    }
  }

  // Defines rules for devices with resolutions between 1440px and 1216px
  @else if $device == l {
    @media screen and (max-width: $container-xl) and (min-width: $container-l) {
      @content; // Includes the mixin content within this media query
    }
  }

  // Defines rules for devices with resolutions between 1140px and 884px
  @else if $device == m {
    @media screen and (max-width: $container-l) and (min-width: $container-m) {
      @content; // Includes the mixin content within this media query
    }
  }

  // Defines rules for devices with resolutions less than 960px
  @else if $device == s {
    @media screen and (max-width: $container-m) {
      @content; // Includes the mixin content within this media query
    }
  }

  // Defines rules for devices with resolutions less than 540px
  @else if $device == xs {
    @media screen and (max-width: $container-s) {
      @content; // Includes the mixin content within this media query
    }
  }
}

// Grid layout
@function grid($col, $total: 12) {
  @return ($col / $total) * 100%;
}

@for $i from 1 through 12 {
  .grid-#{$i} {
    width: calc(#{grid($i)} - #{$gutter});
    margin: $gutter / 2;
    float: left;
    @include responsive(s) {
      width: calc(50% - #{$gutter});
    }
    @include responsive(xs) {
      width: calc(100% - #{$gutter});
      float: none;
    }
  }
}
@for $i from 1 through 12 {
  .grid-nobreak-#{$i} {
    width: calc(#{grid($i)} - #{$gutter});
    margin: $gutter / 2;
    float: left;
  }
}
.row {
  // clearfix
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}
.container {
  max-width: $container-xl;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  padding: 0 8%;
  overflow: hidden;
  @include responsive(s) {
    padding: 0 4%;
  }
}
main,
section {
  padding: 64px 0;
  @include responsive(s) {
    padding: 48px 0;
  }
  @include responsive(xs) {
    padding: 32px 0;
  }
}
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}
.text-center {
  text-align: center;
}
.text-underline {
  text-decoration: underline !important;
}
.d-none {
  display: none !important;
}
.flex {
  display: flex;
  align-items: center;
}

.flex-column {
  flex-direction: column;
}

.flex-start {
  display: flex;
  align-items: start;
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-item-1 {
  flex: 1 1 360px;
}

.flex-item-2 {
  flex: 2 1 360px;
}

.flex-item-3 {
  flex: 3 1 360px;
}

.flex-item-4 {
  flex: 4 1 360px;
}

.flex-item-5 {
  flex: 5 1 360px;
}

.flex-auto {
  flex: 1 1 auto;
}
// Hides the content visually
.sr-only {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  white-space: nowrap;
}

.w-25 {
  width: 25%;
}

.w-75 {
  width: 75%;
}
